stages:
  - build
  - package

merge:
  stage: build
  only:
  - merge_requests
  image: ubuntu:18.10
  except:
  - tags
  before_script:
  - apt-get update -yqq
  - apt-get install -yqq build-essential cmake clang-format clang-tidy
  - apt-get install -yqq libmsgpack-dev libpcap-dev librdkafka-dev libhyperscan-dev libgtest-dev
  script:
  - if [ `find src tests \( -name \*.c -o -name \*.cpp -o -name \*.h \) | xargs clang-format -output-replacements-xml | grep -c "<replacement "` -ne "0" ]; then echo "Run clang-format." && false; fi
  - mkdir build && cd build
  - cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
  - make VERBOSE=1
  - make test
  - clang-tidy -p=. ../src/*.cpp

release:
  stage: package
  only:
  - tags
  image: docker:stable
  services:
  - docker:dind
  script:
  - export DOCKER_HOST=tcp://docker:2375/
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
